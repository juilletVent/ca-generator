[ ca ]
# CA名称
default_ca = CA_default

[ CA_default ]
# 放置相关的档案和目录
dir = ./
certs = $dir/cert
new_certs_dir = $dir/signed_certs
database = $dir/index.txt
serial = $dir/serial
RANDFILE = $dir/private/.rand

# 放置私钥和凭证的路径
private_key = $dir/private/root_ca.key.pem
certificate = $dir/cert/root_ca.cert.pem

default_md = sha256

name_opt = ca_default
cert_opt = ca_default
default_days = 3650
preserve = no
policy = policy_defualt

[ policy_defualt ]
# 签发中继凭证时资料的检查(是否必须和根凭证一样).
countryName = optional
stateOrProvinceName = optional
organizationName = optional
organizationalUnitName = optional
commonName = supplied
emailAddress = optional

[ req ]
# req 工具需要的参数.
default_bits = 2048
distinguished_name = req_distinguished_name
string_mask = utf8only
default_md = sha256

# 产生凭证时要输入的资料的说明.
[ req_distinguished_name ]
countryName = Country Name (2 letter code)
countryName_default = {{CA_O}}
stateOrProvinceName = State or Province Name
stateOrProvinceName_default = {{CA_ST}}
localityName = Locality Name
localityName_default = {{CA_L}}
0.organizationName = Organization Name
0.organizationName_default = {{CA_O}}
organizationalUnitName = Organizational Unit Name
organizationalUnitName_default = {{CA_OU}}
commonName = Common Name
commonName_default = {{CA_CN}}-ROOT-CA
emailAddress = Email Address
emailAddress_default = {{CA_EMAIL}}

[ root_ca ]
# 签发根凭证使用.
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ intermediate_ca ]
# 签发中继凭证使用.
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:0
keyUsage = critical, digitalSignature, cRLSign, keyCertSign